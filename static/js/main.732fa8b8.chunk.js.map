{"version":3,"sources":["registerServiceWorker.js","prefabs/glider_gun.js","util/prefabUtil.js","util/generationUtil.js","util/constants.js","components/canvas/index.js","components/column/index.js","util/canvasUtil.js","containers/Board/index.js","util/classNameUtil.js","components/button/index.js","components/row/index.js","containers/prefabSelector/index.js","containers/controlPanel/index.js","components/header/index.js","index.js","app/index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","data","i","j","glider_gun","PREFABS","GLIDER","GLIDER_GUN","SHIP_1","SHIP_2","PrefabMap","_PrefabMap","Object","defineProperty","glider","gliderGun","getEmptyGeneration","generation","getRandomGeneration","Math","random","getNextGeneration","newGeneration","forEach","col","bool","neighbors","num","countNeighbors","cloneGeneration","setPixel","value","setPrefab","prefabEnum","prefab","getPrefab","a","length","b","x","y","Canvas","props","react_default","createElement","className","height","id","onMouseDown","onMouseMove","onMouseUp","scale","width","Header","concat","children","drawGeneration","canvas","document","getElementById","drawPixel","clearPixel","getContext","fillRect","clearRect","getCoordinates","event","pageX","offsetLeft","pageY","offsetTop","floor","Board","activePrefab","currentGeneration","drawingPrefab","insertPrefab","modifyBoard","_useState","useState","_useState2","slicedToArray","drawing","setDrawing","useEffect","_getCoordinates","_getCoordinates2","_getCoordinates3","_getCoordinates4","_getCoordinates5","_getCoordinates6","prefix","getClassName","names","str","keys","Button","disabled","inline","transparent","onClick","text","Row","PrefabSelector","_ref","setActivePrefab","ControlPanel","onToggle","running","onStep","onRandomize","onClear","setDrawingPrefab","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","ReactDOM","render","setCurrentGeneration","_useState3","_useState4","gameInterval","setGameInterval","_useState5","_useState6","setRunning","_useState7","_useState8","_useState9","_useState10","stepBoard","stopGame","clearInterval","header_Header","interval","setInterval","startGame"],"mappings":"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","file":"static/js/main.732fa8b8.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const WIDTH = 36;\nconst HEIGHT = 9;\n\nconst data = [[]];\nfor (let i = 0; i < HEIGHT; i++) {\n  for (let j = 0; j < WIDTH; j++) {\n    if (!data[i]) {\n      data[i] = [];\n    }\n    data[i][j] = 0;\n  }\n}\n\ndata[4][0] = true;\ndata[4][1] = true;\ndata[5][0] = true;\ndata[5][1] = true;\n\ndata[2][12] = true;\ndata[2][13] = true;\ndata[3][11] = true;\ndata[3][15] = true;\ndata[4][10] = true;\ndata[4][16] = true;\ndata[5][10] = true;\ndata[5][14] = true;\ndata[5][16] = true;\ndata[5][17] = true;\ndata[6][10] = true;\ndata[6][16] = true;\ndata[7][11] = true;\ndata[7][15] = true;\ndata[8][12] = true;\ndata[8][13] = true;\n\ndata[0][24] = true;\ndata[1][22] = true;\ndata[1][24] = true;\ndata[2][20] = true;\ndata[2][21] = true;\ndata[3][20] = true;\ndata[3][21] = true;\ndata[4][20] = true;\ndata[4][21] = true;\ndata[5][22] = true;\ndata[5][24] = true;\ndata[6][24] = true;\n\ndata[2][34] = true;\ndata[2][35] = true;\ndata[3][34] = true;\ndata[3][35] = true;\n\nexport default { data };\n","import glider from '../prefabs/glider';\nimport gliderGun from '../prefabs/glider_gun';\n\nexport const PREFABS = {\n  GLIDER: 'GLIDER',\n  GLIDER_GUN: 'GLIDER_GUN',\n  SHIP_1: 'SHIP_1',\n  SHIP_2: 'SHIP_2'\n};\n\nconst PrefabMap = {\n  [PREFABS.GLIDER]: glider,\n  [PREFABS.GLIDER_GUN]: gliderGun,\n  [PREFABS.SHIP_1]: [[]],\n  [PREFABS.SHIP_2]: [[]]\n};\n\nexport const getPrefab = prefab =>\n  PrefabMap[prefab] && PrefabMap[prefab].data ? PrefabMap[prefab].data : [[]];\n","import { WIDTH, HEIGHT } from './constants';\n\nimport { getPrefab } from './prefabUtil';\n\nexport const getEmptyGeneration = () => {\n  let generation = [[]];\n  for (let i = 0; i < WIDTH; i++) {\n    for (let j = 0; j < HEIGHT; j++) {\n      if (!generation[i]) {\n        generation[i] = [];\n      }\n      generation[i][j] = false;\n    }\n  }\n  return generation;\n};\n\nexport const getRandomGeneration = () => {\n  let generation = [[]];\n\n  for (let i = 0; i < WIDTH; i++) {\n    for (let j = 0; j < HEIGHT; j++) {\n      if (!generation[i]) {\n        generation[i] = [];\n      }\n      generation[i][j] = Math.random() * 100 > 50;\n    }\n  }\n\n  return generation;\n};\n\nexport const countNeighbors = (generation, i, j) => {\n  let num = 0;\n\n  if (generation[i - 1]) {\n    if (generation[i - 1][j - 1]) num++;\n    if (generation[i - 1][j]) num++;\n    if (generation[i - 1][j + 1]) num++;\n  }\n  if (generation[i][j - 1]) num++;\n  if (generation[i][j + 1]) num++;\n  if (generation[i + 1]) {\n    if (generation[i + 1][j - 1]) num++;\n    if (generation[i + 1][j]) num++;\n    if (generation[i + 1][j + 1]) num++;\n  }\n\n  return num;\n};\n\nexport const getNextGeneration = generation => {\n  let newGeneration = [[]];\n  generation.forEach(function(col, i) {\n    col.forEach(function(bool, j) {\n      const neighbors = countNeighbors(generation, i, j);\n\n      if (!newGeneration[i]) {\n        newGeneration[i] = [];\n      }\n\n      if (neighbors <= 1) {\n        newGeneration[i][j] = false;\n      } else if (neighbors === 2) {\n        newGeneration[i][j] = generation[i][j];\n      } else if (neighbors === 3) {\n        newGeneration[i][j] = true;\n      } else if (neighbors >= 4) {\n        newGeneration[i][j] = false;\n      }\n    });\n  });\n  return newGeneration;\n};\n\nexport const cloneGeneration = generation => {\n  let newGeneration = [[]];\n  generation.forEach(function(col, i) {\n    col.forEach(function(bool, j) {\n      if (!newGeneration[i]) {\n        newGeneration[i] = [];\n      }\n      newGeneration[i][j] = generation[i][j];\n    });\n  });\n  return newGeneration;\n};\n\nexport const setPixel = (generation, i, j, value) => {\n  let newGeneration = cloneGeneration(generation);\n  if (!newGeneration[i]) {\n    newGeneration[i] = [];\n  }\n  newGeneration[i][j] = value;\n  return newGeneration;\n};\n\nexport const setPrefab = (generation, i, j, prefabEnum) => {\n  let prefab = getPrefab(prefabEnum);\n  let newGeneration = cloneGeneration(generation);\n  for (let a = 0; a < prefab.length; a++) {\n    for (let b = 0; b < prefab[a].length; b++) {\n      let x = b + i;\n      let y = a + j;\n      if (!newGeneration[x]) {\n        newGeneration[x] = [];\n      }\n      newGeneration[x][y] = prefab[a][b];\n    }\n  }\n  return newGeneration;\n};\n","export const WIDTH = 100;\nexport const HEIGHT = 100;\nexport const SCALE = 5;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nconst propTypes = {\n  height: PropTypes.number.isRequired,\n  onMouseDown: PropTypes.func.isRequired,\n  onMouseMove: PropTypes.func.isRequired,\n  onMouseUp: PropTypes.func.isRequired,\n  scale: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n};\n\nexport default function Canvas(props) {\n  return (\n    <canvas\n      className={'Canvas'}\n      height={props.height}\n      id={'canvas'}\n      onMouseDown={props.onMouseDown}\n      onMouseMove={props.onMouseMove}\n      onMouseUp={props.onMouseUp}\n      scale={props.scale}\n      width={props.width}\n    />\n  );\n}\n\nCanvas.propTypes = propTypes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nconst propTypes = {\n  className: PropTypes.string\n};\n\nexport default function Header(props) {\n  return (\n    <div className={`Column ${props.className}`}>\n      {props.children}\n    </div>\n  );\n}\n\nHeader.propTypes = propTypes;\n","// Canvas utility\n\nimport { SCALE } from './constants';\n\nexport const drawGeneration = generation => {\n  const canvas = document.getElementById('canvas');\n  generation.forEach(function(col, i) {\n    col.forEach(function(bool, j) {\n      if (generation[i][j]) {\n        drawPixel(canvas, i, j, SCALE);\n      } else {\n        clearPixel(canvas, i, j, SCALE);\n      }\n    });\n  });\n};\n\nexport const drawPixel = (canvas, x, y) => {\n  canvas.getContext('2d').fillRect(x * SCALE, y * SCALE, SCALE, SCALE);\n};\n\nexport const clearPixel = (canvas, x, y) => {\n  canvas.getContext('2d').clearRect(x * SCALE, y * SCALE, SCALE, SCALE);\n};\n\nexport const isPixelSet = (canvas, x, y) => {\n  var image = canvas.getContext('2d').getImageData(x, y, 1, 1);\n  if (image) {\n    return image.data && image.data[3] !== 0 ? true : false;\n  }\n};\n\nexport const getCoordinates = event => {\n  const canvas = document.getElementById('canvas');\n\n  let x = event.pageX - canvas.offsetLeft;\n  let y = event.pageY - canvas.offsetTop;\n\n  const xPos = Math.floor(x / SCALE);\n  const yPos = Math.floor(y / SCALE);\n  return [xPos, yPos];\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Canvas from '../../components/canvas';\nimport Column from '../../components/column';\n\nimport {\n  drawGeneration,\n  getCoordinates\n} from '../../util/canvasUtil';\n\nconst propTypes = {\n  activePrefab: PropTypes.string.isRequired,\n  currentGeneration: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.bool)),\n  drawingPrefab: PropTypes.bool.isRequired,\n  insertPrefab: PropTypes.func.isRequired,\n  modifyBoard: PropTypes.func.isRequired\n};\n\nexport default function Board(props) {\n  const {\n    activePrefab,\n    currentGeneration,\n    drawingPrefab,\n    insertPrefab,\n    modifyBoard\n  } = props;\n  const [drawing, setDrawing] = useState(false);\n\n  useEffect(() => {\n    drawGeneration(currentGeneration);\n  }, [props.currentGeneration]);\n\n  const onMouseDown = event => {\n    if (!drawingPrefab) {\n      setDrawing(true);\n      const [i, j] = getCoordinates(event);\n      modifyBoard(i, j, true);\n    }\n  };\n\n  const onMouseMove = event => {\n    if (drawing && !drawingPrefab) {\n      const [i, j] = getCoordinates(event);\n      modifyBoard(i, j, true);\n    }\n  };\n\n  const onMouseUp = event => {\n    setDrawing(false);\n    if (drawingPrefab) {\n      const [i, j] = getCoordinates(event);\n      insertPrefab(i, j, activePrefab);\n    }\n  };\n\n  return (\n    <Column className={'Board-container'}>\n      <Canvas\n        height={500}\n        onMouseDown={onMouseDown}\n        onMouseMove={onMouseMove}\n        onMouseUp={onMouseUp}\n        scale={1}\n        width={500}\n      />\n    </Column>\n  );\n}\n\nBoard.propTypes = propTypes;\n","export const classNamePrefixer = prefix => names => {\n  let str = `${prefix}`;\n  let keys = names ? Object.keys(names) : [];\n  for (var i = 0; i < keys.length; i++) {\n    if (names[keys[i]]) {\n      str += ` ${prefix}-${keys[i]}`;\n    }\n  }\n  return str;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { classNamePrefixer } from '../../util/classNameUtil';\n\nimport './styles.css';\n\nconst getClassName = classNamePrefixer('button');\n\nconst propTypes = {\n  disabled: PropTypes.bool,\n  id: PropTypes.string,\n  inline: PropTypes.bool,\n  transparent: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired\n};\n\nexport default function Button(props) {\n  return (\n    <button\n      id={props.id}\n      disabled={props.disabled}\n      className={getClassName({\n        inline: props.inline,\n        transparent: props.transparent\n      })}\n      onClick={props.onClick}\n    >\n      {props.text}\n    </button>\n  );\n}\n\nButton.propTypes = propTypes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nconst propTypes = {\n  width: PropTypes.number\n};\n\nexport default function Row(props) {\n  return (\n    <div className={'Row'}>\n      {props.children}\n    </div>\n  );\n}\n\nRow.propTypes = propTypes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PREFABS } from '../../util/prefabUtil';\n\nimport Button from '../../components/button';\nimport Column from '../../components/column';\nimport Row from '../../components/row';\n\n// import './styles.css';\n\nconst propTypes = {\n  activePrefab: PropTypes.string.isRequired,\n  setActivePrefab: PropTypes.func.isRequired\n};\n\nexport default function PrefabSelector({\n  activePrefab,\n  drawingPrefab,\n  setActivePrefab\n}) {\n  return (\n    <Column className={'PrefabSelector-container'}>\n      <Row>\n        <Button\n          disabled={!drawingPrefab}\n          transparent={activePrefab !== PREFABS.GLIDER}\n          inline\n          onClick={() => setActivePrefab(PREFABS.GLIDER)}\n          text={'Glider'}\n        />\n        <Button\n          disabled={!drawingPrefab}\n          transparent={activePrefab !== PREFABS.GLIDER_GUN}\n          inline\n          onClick={() => setActivePrefab(PREFABS.GLIDER_GUN)}\n          text={'Glider Gun'}\n        />\n      </Row>\n      <Row>\n        <Button\n          disabled={!drawingPrefab}\n          transparent={activePrefab !== PREFABS.SHIP_1}\n          inline\n          onClick={() => setActivePrefab(PREFABS.SHIP_1)}\n          text={'TODO'}\n        />\n        <Button\n          disabled={!drawingPrefab}\n          transparent={activePrefab !== PREFABS.SHIP_2}\n          inline\n          onClick={() => setActivePrefab(PREFABS.SHIP_2)}\n          text={'TODO'}\n        />\n      </Row>\n    </Column>\n  );\n}\n\nPrefabSelector.propTypes = propTypes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '../../components/button';\nimport Column from '../../components/column';\nimport PrefabSelector from '../../containers/prefabSelector';\n\nimport './styles.css';\n\nconst propTypes = {\n  activePrefab: PropTypes.string.isRequired,\n  drawingPrefab: PropTypes.bool.isRequired,\n  onClear: PropTypes.func.isRequired,\n  onRandomize: PropTypes.func.isRequired,\n  onStep: PropTypes.func.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  setActivePrefab: PropTypes.func.isRequired,\n  setDrawingPrefab: PropTypes.func.isRequired,\n  running: PropTypes.bool.isRequired\n};\n\nexport default function ControlPanel(props) {\n  return (\n    <Column className={'ControlPanel-container'}>\n      <Button\n        onClick={props.onToggle}\n        text={props.running ? 'Stop' : 'Start'}\n      />\n      <Button disabled={props.running} onClick={props.onStep} text={'Step'} />\n      <Button\n        disabled={props.running}\n        onClick={props.onRandomize}\n        text={'Randomize'}\n      />\n      <Button onClick={props.onClear} text={'Clear'} />\n      <Button\n        transparent={!props.drawingPrefab}\n        onClick={() => props.setDrawingPrefab(drawing => !drawing)}\n        text={'Draw Prefab'}\n      />\n      <PrefabSelector\n        activePrefab={props.activePrefab}\n        drawingPrefab={props.drawingPrefab}\n        setActivePrefab={props.setActivePrefab}\n      />\n    </Column>\n  );\n}\n\nControlPanel.propTypes = propTypes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.css';\n\nconst propTypes = {\n  text: PropTypes.string\n};\n\nexport default function Header(props) {\n  return (\n    <div className={'App-header'}>\n      <h1 className={'App-header-text'}>{props.text}</h1>\n    </div>\n  );\n}\n\nHeader.propTypes = propTypes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport App from './app';\n\nregisterServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { useState } from 'react';\nimport {\n  getEmptyGeneration,\n  getRandomGeneration,\n  getNextGeneration,\n  setPixel,\n  setPrefab\n} from '../util/generationUtil';\nimport { PREFABS } from '../util/prefabUtil';\n\nimport Board from '../containers/Board';\nimport ControlPanel from '../containers/controlPanel';\nimport Header from '../components/header';\nimport Row from '../components/row';\n\nimport './styles.css';\n\nexport default function App() {\n  const [currentGeneration, setCurrentGeneration] = useState(\n    getEmptyGeneration()\n  );\n  const [gameInterval, setGameInterval] = useState(null);\n  const [running, setRunning] = useState(false);\n  const [activePrefab, setActivePrefab] = useState(PREFABS.GLIDER);\n  const [drawingPrefab, setDrawingPrefab] = useState(false);\n\n  const stepBoard = () => {\n    setCurrentGeneration(currentGeneration =>\n      getNextGeneration(currentGeneration)\n    );\n  };\n\n  const modifyBoard = (i, j, value) => {\n    setCurrentGeneration(setPixel(currentGeneration, i, j, value));\n  };\n\n  const insertPrefab = (i, j, prefab) => {\n    setCurrentGeneration(setPrefab(currentGeneration, i, j, prefab));\n  };\n\n  const startGame = () => {\n    const interval = setInterval(() => {\n      stepBoard();\n    }, 35);\n    setGameInterval(interval);\n    setRunning(true);\n  };\n\n  const stopGame = () => {\n    clearInterval(gameInterval);\n    setRunning(false);\n  };\n\n  const toggleGame = () => {\n    running ? stopGame() : startGame();\n  };\n\n  const randomize = () => {\n    setCurrentGeneration(getRandomGeneration());\n  };\n\n  const clearBoard = () => {\n    stopGame();\n    setCurrentGeneration(getEmptyGeneration());\n  };\n\n  return (\n    <div className={'App-container'}>\n      <Header text={'Conways Game of Life'} />\n      <div className={'App-main'}>\n        <ControlPanel\n          activePrefab={activePrefab}\n          drawingPrefab={drawingPrefab}\n          onClear={clearBoard}\n          onRandomize={randomize}\n          onStep={stepBoard}\n          onToggle={toggleGame}\n          running={running}\n          setActivePrefab={setActivePrefab}\n          setDrawingPrefab={setDrawingPrefab}\n        />\n        <Board\n          activePrefab={activePrefab}\n          currentGeneration={currentGeneration}\n          drawingPrefab={drawingPrefab}\n          insertPrefab={insertPrefab}\n          modifyBoard={modifyBoard}\n        />\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}